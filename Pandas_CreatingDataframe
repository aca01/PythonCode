import pandas as pd

'''Creating a dataframe with Pandas by adding data dictionaries 
where the key is the name of the column and the value is a list of column values'''
df1 = pd.DataFrame({
  'Product ID': [1, 2, 3, 4],
  'Product Name': ['t-shirt', 't-shirt', 'skirt', 'skirt'],
  'Color': ['blue','green','red', 'black']
})

#Displays above table
print(df1)


'''pass in a list of lists, where each one represents a row of data;
Use the keyword argument columns to pass a list of column names'''
df2 = pd.DataFrame([
  [1, 'San Diego', 100],
  [2, 'Los Angeles', 120],
  [3, 'San Francisco', 90],
  [4, 'Sacramento', 115]
],
  columns=['Store ID', 'Location','Number of Employees'])

print(df2)

#Reading a CVS file
df = pd.read_csv('sample.csv')
print(df)


df = pd.read_csv('imdb.csv')
print(df.head()) #Shows first 5 rows of data
print(df.info()) #Shows stats for each column

#Two ways to select a column using df2 mentioned earlier
df2Column = df2.Location #when column name doesn't start with a number, doesn't contain spaces or special characters, etc.
df2Column = df2['Store ID'] #when the above condition doesn't apply


#Selecting multiple columns
df = pd.DataFrame([
  ['January', 100, 100, 23, 100],
  ['February', 51, 45, 145, 45],
  ['March', 81, 96, 65, 96],
  ['April', 80, 80, 54, 180],
  ['May', 51, 54, 54, 154],
  ['June', 112, 109, 79, 129]],
  columns=['month', 'clinic_east',
           'clinic_north', 'clinic_south',
           'clinic_west'])
#New dataframe from columns of above dataframe
clinic_north_south = df[['clinic_north','clinic_south']]

#Selecting a row 
#Remember row index starts at zero
marchData = df.iloc[2]

#Selecting multiple rows
RowSelection1 = df.iloc[3:7] #From third row up to but not including seventh row
RowSelection2 = df.iloc[:5] #Up to but not including fifth row
RowSelection3 = df.iloc[-2:] #From second to last row including last row

#Selecting rows based on criterion
januaryRows = df[df.month == 'January'] #equals to ...
print(january)
##other examples
Example1 =df[df.month != 'January'] #different from ...
Example2 =df[df.age > 30] #greater than ...
Example3 =df[df.age < 30] #smaller than ...

#Selecting rows based on criteria across columns
march_april = df[(df.month == 'March') | (df.month == 'April')] #The | sign means OR
march_age = df[(df.month == 'March') & (df.age == 96)] #The & sign means AND
print(march_april)

#Selection rows base on multiple criteria in one column
january_february_march = df[df.month.isin(['January','February','March'])] #use the isin() command
print(january_february_march)

#Setting or Resetting Indices
df2 = df.loc[[1, 3, 5]] #This uses df to create new dataframe called df2 where indices are 1,3,5
print(df2)

df3 = df2.reset_index() #This resets indices to 0,1,2 and keeps old indices in a column name 'index'
print(df3)

df2.reset_index(drop=True, inplace=True) #reset_index() resets indices; inplace=True modifies df2; drop=True drops 'index' column
print(df2)
