##Adding Columns

import pandas as pd
df = pd.DataFrame([
  [1, '3 inch screw', 0.5, 0.75],
  [2, '2 inch nail', 0.10, 0.25],
  [3, 'hammer', 3.00, 5.50],
  [4, 'screwdriver', 2.50, 3.00]
  ],
  columns=['Product ID', 'Description', 'Cost to Manufacture', 'Price']
  )

#added a new column is by giving a list of the same length as the existing DataFrame
df['Sold in Bulk?'] = ['Yes', 'Yes', 'No', 'No']
print(df)

#added a new column that is the same for all rows in the DataFrame
df['Is taxed?'] = 'Yes'
print(df)


##add a new column by performing an operation on the existing columns
df = pd.DataFrame([
  [1, '3 inch screw', 0.5, 0.75],
  [2, '2 inch nail', 0.10, 0.25],
  [3, 'hammer', 3.00, 5.50],
  [4, 'screwdriver', 2.50, 3.00]],
  columns=['Product ID', 'Description', 'Cost to Manufacture', 'Price'])
#added column here
df['Revenue'] = df['Price'] - df['Cost to Manufacture']
print(df)

##use the apply function to apply a function to every value in a particular column
##Can use lower or upper functions within the apply function
df = pd.DataFrame([
  ['JOHN SMITH', 'john.smith@gmail.com'],
  ['Jane Doe', 'jdoe@yahoo.com'],
  ['joe schmo', 'joeschmo@hotmail.com']],
  columns=['Name', 'Email'])
#added column here
df['Lowercase Name'] = df.Name.apply(lower)
print(df)


#change all of the column names at once by setting the .columns property to a different list
#Be careful not to mislabel columns
df = pd.DataFrame({
    'name': ['John', 'Jane', 'Sue', 'Fred'],
    'age': [23, 29, 21, 18]})
df.columns = ['First Name', 'Age']


#Rename columns here
'''Using .rename() with only the columns keyword will create a new DataFrame, 
leaving your original DataFrame unchanged.
That's why we also passed in the keyword argument inplace=True. 
Using inplace=True lets us edit the original DataFrame'''
# .remname() is preferable to .columns
df.rename(columns={
  'name': 'employee_name'
}, inplace=True)
print(df)

'''For more on Pandas 
Go to: https://pandas.pydata.org '''
